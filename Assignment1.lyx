#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\rightmargin 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Assignment 1 DS
\end_layout

\begin_layout Author
Barak Gorodissky 208845495, Dan Lurye 316143171
\end_layout

\begin_layout Subparagraph*
We, Barak Gorodissky 208845495, Dan Lurye 316143171, assert that the work
 we submitted is entirely our own.
 We have not received any part from any other student in the class, nor
 did we give parts of it for use to others.
 We realize that if our work is found to contain code that is not originally
 our own, a formal case will be opened against us with the BGU disciplinary
 committee.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $f_{4}\leq f_{1},f_{13}\leq f_{9},f_{11}\leq f_{14},f_{10}\leq f_{2}\leq f_{12}\leq f_{3}\leq f_{5}\leq f_{7}\leq f_{8}\leq f_{6}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{4}\in O\left\{ f_{1}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For 
\begin_inset Formula $n_{0}=1,c=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:\sqrt{n}>1\Rightarrow\frac{1}{\sqrt{n}}<1\Rightarrow$
\end_inset

 
\begin_inset Formula $\frac{1}{\sqrt{n}}<1\cdot2020.$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{1}\in\Theta\left\{ f_{13}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For 
\begin_inset Formula $n_{0}=1,c_{1}=\frac{1}{2^{100}},c_{2}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset

 
\begin_inset Formula $\frac{1}{2^{100}}\cdot2^{100}=1\leq2020\leq1\cdot2048\cdot2^{89}=2^{100}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{13}\in O\left\{ f_{9}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $n_{0}=1,c=\frac{5}{2}\cdot2^{100}$
\end_inset

 Note that 
\begin_inset Formula $n>1,n\in\mathbb{N}\Rightarrow\log\text{(n)}>1.$
\end_inset

 Hence we get that that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset

 
\begin_inset Formula $2^{100}\leq2^{100}\log\left(n\right)=2^{100}\cdot\frac{5}{2}\cdot\frac{2}{5}\log\left(n\right)=2^{100}\cdot\frac{5}{2}\cdot\log\left(n^{\frac{2}{5}}\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{9}\in\Theta\left\{ f_{11}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Note that 
\begin_inset Formula $\log\left(n^{\frac{2}{5}}\right)=\frac{2}{5}\log\left(n\right)$
\end_inset

; 
\begin_inset Formula $\log\left(n^{5}\right)=5\log\left(n\right).$
\end_inset

 So for 
\begin_inset Formula $c_{1}=\frac{1}{25},c_{2}=\frac{1}{5},n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:\frac{1}{25}\cdot5\log(n)=\frac{1}{5}\log(n)\leq\frac{2}{5}\log(n)\leq\log(n)=\frac{1}{5}\cdot5\log(n)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{11}\in O\{f_{14}\}:$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For 
\begin_inset Formula $c=\frac{15}{4},n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset

 
\begin_inset Formula $5\log(n)\leq\frac{15}{4}\cdot\frac{4n}{3}=5n$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{10}\in\Theta\{f_{14}\}:$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Note that 
\begin_inset Formula $\log_{3}(3^{n}n^{2})=\log_{3}(3^{n})+\log_{3}(n^{2})=n\log_{3}(3)+2\log_{3}(n)=n+2\log_{3}(n).$
\end_inset

 
\end_layout

\begin_layout Standard
For 
\begin_inset Formula $c_{1}=\frac{3}{4},c_{2}=\frac{9}{4},n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:\frac{3}{4}\cdot\frac{4}{3}n=n\le n+2\log_{3}(n)\le n+2n=\frac{9}{4}\cdot\frac{4}{3}n.$
\end_inset

 (
\begin_inset Formula $log_{3}(n)<n;\forall n\geq1$
\end_inset

)
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{10}\in O\{f_{2}\}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
Note that 
\begin_inset Formula $3^{\log_{\sqrt{3}}n}=n^{\log_{\sqrt{3}}3}=n^{2}.$
\end_inset

 Hence for 
\begin_inset Formula $n_{0}=1,c=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset

 
\begin_inset Formula $n+2\log_{3}(n)\leq n^{2}.$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{2}\in O\{f_{12}\}:$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For 
\begin_inset Formula $c=1,n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:n^{2}\leq n^{3}+n^{2}+n+\log(n)$
\end_inset

 (because 
\begin_inset Formula $0\leq n^{3}+n+\log(n)$
\end_inset

).
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{12}\in O\{f_{3}\}:$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Note that 
\begin_inset Formula $n^{3}+n^{2}+n+\log\left(n\right)\leq4n^{3}$
\end_inset

, we will substitute 
\begin_inset Formula $m=\log\left(n\right)\Rightarrow n=2^{m}$
\end_inset

.
 So 
\begin_inset Formula $4n^{3}=4\left(2^{m}\right)^{3}=2^{2}\cdot2^{3m}=2^{3m+2}$
\end_inset

 and 
\begin_inset Formula $2^{\sqrt{n}}=2^{2^{\frac{m}{2}}}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

For 
\begin_inset Formula $c=1,m_{0}=10$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}$
\end_inset

, 
\begin_inset Formula $3n+2\leq2^{\frac{n}{2}}\Rightarrow2^{3m+2}\leq2^{2^{\frac{m}{2}}}\left(2^{x}\text{ is a stricly increasing function}\right)\Rightarrow$
\end_inset

 for 
\begin_inset Formula $c=1$
\end_inset

 and for every 
\begin_inset Formula $n>n_{0}=2^{10},n^{3}+n^{2}+n+\log\left(n\right)\leq4n^{3}\leq2^{\sqrt{n}}.$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Rightarrow n^{3}+n^{2}+n+\log\left(n\right)\in O\left(2^{\sqrt{n}}\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{3}\in O\left\{ f_{5}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For 
\begin_inset Formula $c=1,n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $2^{\sqrt{n}}\leq5^{n}\iff\log\left(2^{\sqrt{n}}\right)\leq\log\left(5^{n}\right)\left(\text{because \ensuremath{\log\left(n\right)} is strictly increasing function}\right)\iff$
\end_inset


\begin_inset Formula $\sqrt{n}\log\left(2\right)\leq n\log\left(5\right)\iff\sqrt{n}\leq n\log\left(5\right)$
\end_inset

 and the last statement is true for all 
\begin_inset Formula $n$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{5}\in O\left\{ f_{7}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For 
\begin_inset Formula $c=1,n_{0}=4,$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:5^{n}\leq n^{n}.$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{7}\in O\left\{ f_{8}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Note that for every 
\begin_inset Formula $n\ge4:n\log\left(n\right)\leq n^{2}\leq2^{n}\leq2^{n}\log\left(3\right).$
\end_inset


\end_layout

\begin_layout Standard
Hence for 
\begin_inset Formula $c=1,n_{0}=4,$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset

 
\begin_inset Formula $n^{n}\leq3^{\left(2^{n}\right)}\iff\log\left(n^{n}\right)\leq\log\left(3^{\left(2^{n}\right)}\right)\iff n\log\left(n\right)\leq2^{n}\log\left(3\right).$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $f_{8}\in O\left\{ f_{6}\right\} :$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Note that 
\begin_inset Formula $\lim_{n\rightarrow\infty}\frac{3^{2^{n}}}{2^{3^{n}}}=\lim_{n\rightarrow\infty}\frac{2^{\log3^{2^{n}}}}{2^{\log2^{3^{n}}}}=\lim_{n\rightarrow\infty}\frac{2^{2^{n}\log3}}{2^{3^{n}}}=\lim_{n\rightarrow\infty}2^{2^{n}\log3-3^{n}}=2^{\lim_{n\rightarrow\infty}\left(2^{n}\log3-3^{n}\right)}=2^{-\infty}=0$
\end_inset

 
\begin_inset Formula $\Rightarrow3^{2^{n}}\in o\left(2^{3^{n}}\right)\Rightarrow f_{8}\in O\left(f_{6}\right).$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\left(\lim_{n\rightarrow\infty}2^{g\left(n\right)}=2^{\lim_{n\rightarrow\infty}g\left(n\right)}\right)$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\left(\Rightarrow\right)$
\end_inset

 Let's assume that 
\begin_inset Formula $f\left(n\right)\in O\left(g\left(n\right)\right)\land f\left(n\right)\in\Omega\left(g\left(n\right)\right)\Rightarrow$
\end_inset

 there exist 
\begin_inset Formula $n_{0_{1}},n_{0_{2}},c_{1},c_{2}$
\end_inset

 such that for every 
\begin_inset Formula $n>n_{0_{1}}:$
\end_inset

 
\begin_inset Formula $f\left(n\right)\leq c_{1}\cdot g\left(n\right)$
\end_inset

 and for every 
\begin_inset Formula $n>n_{0_{2}}$
\end_inset

 
\begin_inset Formula $f\left(n\right)\geq c_{2}\cdot g\left(n\right)$
\end_inset

, hence if we choose 
\begin_inset Formula $n_{0}=max\left\{ n_{0_{1}},n_{0_{2}}\right\} $
\end_inset

,
\begin_inset Formula $c_{1}=c_{1},c_{2}=c_{2}$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}$
\end_inset

 
\begin_inset Formula $c_{2}\cdot g\left(n\right)\leq f\left(n\right)\leq c_{1}\cdot g\left(n\right)\Rightarrow f\left(n\right)\in\Theta\left\{ g\left(n\right)\right\} $
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left(\Leftarrow\right)$
\end_inset

 Let's assume that 
\begin_inset Formula $f\left(n\right)\in\Theta\left\{ g\left(n\right)\right\} \Rightarrow$
\end_inset

 there exists 
\begin_inset Formula $n_{0},c_{1},c_{2}$
\end_inset

 such that for every 
\begin_inset Formula $n>n_{0}:$
\end_inset

 
\begin_inset Formula $c_{2}\cdot g\left(n\right)\leq f\left(n\right)\leq c_{1}\cdot g\left(n\right)\Rightarrow$
\end_inset

 for every 
\begin_inset Formula $n>n_{0}$
\end_inset

 
\begin_inset Formula $f\left(n\right)\geq c_{2}\cdot g\left(n\right)$
\end_inset

 and 
\begin_inset Formula $f\left(n\right)\leq c_{1}\cdot g\left(n\right)$
\end_inset

 
\begin_inset Formula $\Rightarrow f\left(n\right)\in O\left(g\left(n\right)\right)\land f\left(n\right)\in\Omega\left(g\left(n\right)\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Let's assume that 
\begin_inset Formula $f(n)=O(g(n))\Rightarrow$
\end_inset

 there exist 
\begin_inset Formula $c_{1},n_{0}$
\end_inset

 such that for every 
\begin_inset Formula $n>n_{0}:f(n)\leq c_{1}\cdot g(n)\Rightarrow g(n)\geq\frac{1}{c_{1}}\cdot f(n).$
\end_inset

 Hence for 
\begin_inset Formula $c_{2}=\frac{1}{c_{1}},n_{0}$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:g(n)\geq c_{2}\cdot f(n)\Rightarrow g(n)=\Omega(f(n)).$
\end_inset

 
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $p_{1}(n),p_{2}(n)$
\end_inset

 be polynomials such that 
\begin_inset Formula $p_{1}(n)=\sum_{k=0}^{n_{1}}a_{k}n^{k},$
\end_inset

 and 
\begin_inset Formula $p_{2}(n)=\sum_{k=0}^{n_{2}}b_{k}n^{k}$
\end_inset

 where 
\begin_inset Formula $a_{k},b_{k}$
\end_inset

 are constants and 
\begin_inset Formula $a_{n_{1}},b_{n_{2}}>0.$
\end_inset

 Also, 
\begin_inset Formula $p_{1}(p_{2}(n))=\Theta(g(n)).$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $p_{1}\left(p_{2}\left(n\right)\right)=\sum_{k=0}^{n_{1}}a_{k}\left(\sum_{j=0}^{n_{2}}b_{j}n^{j}\right)^{k}.$
\end_inset

 We can see that when substituting 
\begin_inset Formula $p_{2}\left(n\right)$
\end_inset

 for 
\begin_inset Formula $\sum_{k=0}^{n_{2}}b_{k}n^{k}$
\end_inset

, the highest degree in the new polynomial will be 
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
index ← -1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
for i = 1 to A.length-1 do:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 if A[i] == key :
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\backslash
quad
\end_layout

\end_inset

 index ← i 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\backslash
quad
\end_layout

\end_inset

 break 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
return index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
in the worst case value key isn't in array 'A', as a result the for loop
 in line (2) will iterate from 
\begin_inset Formula $i=1$
\end_inset

 until 
\begin_inset Formula $n-1$
\end_inset

 performing operations in 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

 each iteration, therefore we get that the worst case time cost will be:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\sum_{i=1}^{n-1}1=n-1=\Theta\left(n\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=T\left(\sqrt{n}\right)+1$
\end_inset

.
 We will substitute 
\begin_inset Formula $m=\log\left(n\right)\Rightarrow n=2^{m}.$
\end_inset

 So 
\begin_inset Formula $T\left(n\right)=T\left(2^{m}\right)=T\left(2^{\frac{m}{2}}\right)+1$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Also let's define 
\begin_inset Formula $S\left(m\right)=T\left(n\right)=T\left(2^{m}\right)\Rightarrow S\left(m\right)=S\left(\frac{m}{2}\right)+1.$
\end_inset

 T
\begin_inset Formula $\left(2\right)=S\left(1\right)$
\end_inset

 =constant.
 So we will assume 
\begin_inset Formula $T\left(2\right)=S\left(1\right)=1$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $S\left(m\right)=S\left(\frac{m}{2}\right)+1=S\left(\frac{m}{4}\right)+2=...=S\left(\frac{m}{2^{i}}\right)+i;$
\end_inset

 We will stop when we reach 
\begin_inset Formula $S\left(\frac{m}{2^{i}}\right)=S\left(1\right)\Rightarrow\frac{m}{2^{i}}=1\Rightarrow i=\log\left(m\right).$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $S\left(m\right)=S\left(1\right)+\log\left(m\right)\Rightarrow T\left(n\right)=S\left(m\right)=S\left(1\right)+\log\left(m\right)=S\left(1\right)+\log\left(\log\left(n\right)\right)\Rightarrow T\left(n\right)\in\Theta\left(\log\left(\log\left(n\right)\right)\right).$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=5T\left(\frac{n}{2}\right)+n^{3}\log\left(n\right).$
\end_inset

 This recurrence satisfies case 3 of the master method.
 
\begin_inset Formula $a=5,b=2,f\left(n\right)=n^{3}\log\left(n\right).$
\end_inset


\begin_inset Newline newline
\end_inset

We need to prove: 
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\exists\epsilon>0:f\left(n\right)\in\Omega\left(n^{\log_{2}5+\epsilon}\right).$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\exists c<1,n_{0}:\forall n>n_{0}\text{ }5\cdot f\left(\frac{n}{2}\right)\leq c\cdot f\left(n\right).$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[i.]
\backslash
setcounter{enumi}{1}
\end_layout

\end_inset

For 
\begin_inset Formula $\epsilon=3$
\end_inset

 we get that 
\begin_inset Formula $n^{\log_{2}5+\epsilon}=n^{3},$
\end_inset

 and for 
\begin_inset Formula $c_{1}=1,n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:n^{3}\log\left(n\right)>1\cdot n^{3}$
\end_inset

 
\begin_inset Formula $\left(\text{because \ensuremath{\log\left(n\right)>1} for every \ensuremath{n\geq2}}\right).$
\end_inset

 Hence 
\begin_inset Formula $f\left(n\right)\in\Omega\left(n^{3}\right).$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[ii.]
\backslash
setcounter{enumi}{1}
\end_layout

\end_inset

For 
\begin_inset Formula $c=1,n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}:5\cdot\left(\frac{n}{2}\right)^{3}\log\left(\frac{n}{2}\right)=\frac{5}{8}n^{3}\left(\log\left(n\right)-\log\left(2\right)\right)\leq1\cdot n^{3}\log\left(n\right)\iff\frac{5}{8}\left(\log\left(n\right)-1\right)\leq\log\left(n\right)\iff\frac{5}{8}\log\left(n\right)-\frac{5}{8}\leq\log\left(n\right).$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Therefore 
\begin_inset Formula $T\left(n\right)\in\Theta\left(n^{3}\log\left(n\right)\right).$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=T\left(cn\right)+T\left(\left(1-c\right)n\right)+1$
\end_inset

 we can assume with out loss of generality that 
\begin_inset Formula $0<1-c\leq\frac{1}{2}$
\end_inset

 , 
\begin_inset Formula $\frac{1}{2}\leq c<1$
\end_inset

 if this is not the case we will switch the names between 
\begin_inset Formula $c,1-c$
\end_inset

.
\begin_inset Newline newline
\end_inset

if we develop the recurrence tree we can see that the 
\begin_inset Formula $\log_{\frac{1}{1-c}}n$
\end_inset

 first levels are full adding 
\begin_inset Formula $1+2+4+8+\dots+2^{\log_{\frac{1}{1-c}}n}=\Theta\left(n\right)$
\end_inset

 hence 
\begin_inset Formula $T\left(n\right)\in\Omega\left(n\right)$
\end_inset

 .
 but the tree has total 
\begin_inset Formula $\log_{\frac{1}{c}}n$
\end_inset

 levels and some of them are not full hence 
\begin_inset Formula $T\left(n\right)\leq$
\end_inset

 
\begin_inset Formula $1+2+4\dots+2^{\log_{\frac{1}{c}}n}=\Theta\left(n\right)$
\end_inset

 therefore 
\begin_inset Formula $T\left(n\right)\in O\left(n\right)$
\end_inset

, so we guess 
\begin_inset Formula $T\left(n\right)\in\Theta\left(n\right)$
\end_inset

 we will prove that using induction:
\end_layout

\begin_deeper
\begin_layout Enumerate
Lower bound:
\begin_inset Formula $T\left(n\right)\geq d\cdot n$
\end_inset

 for all 
\begin_inset Formula $n\geq1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
base: 
\begin_inset Formula $T\left(1\right)=1\geq d\cdot1$
\end_inset

 for 
\begin_inset Formula $d=1$
\end_inset


\end_layout

\begin_layout Enumerate
step: we assume 
\begin_inset Formula $T\left(m\right)\geq dm$
\end_inset

 for all 
\begin_inset Formula $1\leq m<n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T\left(n\right)=T\left(cn\right)+T\left(\left(1-c\right)n\right)+1\geq dcn+dn\left(1-c\right)+1=dn+1\geq dn$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Rightarrow T\left(n\right)\in\Omega\left(n\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Upper bound :
\begin_inset Formula $T\left(n\right)\leq dn-b$
\end_inset

 for all 
\begin_inset Formula $n\geq1$
\end_inset

 and 
\begin_inset Formula $b>0$
\end_inset

 some constant
\end_layout

\begin_deeper
\begin_layout Enumerate
base 
\begin_inset Formula $T\left(1\right)=1\leq d-b$
\end_inset

 this is true for properly selected 
\begin_inset Formula $d=2,b=1$
\end_inset


\end_layout

\begin_layout Enumerate
step: we assume 
\begin_inset Formula $T\left(m\right)\leq dm-b$
\end_inset

 for all 
\begin_inset Formula $1\leq m<n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T\left(n\right)=T\left(cn\right)+T\left(\left(1-c\right)n\right)+1\leq dcn-b+dn\left(1-c\right)-b+1=dn-2b+1\leq dn$
\end_inset

 iff 
\begin_inset Formula $b\geq\frac{1}{2}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Rightarrow T\left(n\right)\in O\left(n\right)$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=2T\left(\frac{n}{2}\right)+n$
\end_inset

 this recurrence satisfies case 2 of the master method.
 We have 
\begin_inset Formula $a=2,b=2,f\left(n\right)=n$
\end_inset

 
\begin_inset Formula $\log_{b}a=\log_{2}2=1$
\end_inset

 and 
\begin_inset Formula $f\left(n\right)=n\in\Theta\left(n^{\log_{2}2}\right)=\Theta\left(n\right)$
\end_inset

 hence 
\begin_inset Formula $T(n)\in\Theta\left(f\left(n\right)\log n\right)=\Theta\left(n\log n\right)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=T\left(\frac{1}{3}n\right)+T\left(\frac{2}{3}n\right)+n$
\end_inset

 we guess that 
\begin_inset Formula $T\left(n\right)\in\Theta\left(n\log n\right)$
\end_inset

 we will prove that using induction (we assume 
\begin_inset Formula $T\left(2\right)=const$
\end_inset

 ).
\end_layout

\begin_deeper
\begin_layout Enumerate
Upper bound: 
\begin_inset Formula $T\left(n\right)\leq c\cdot n\log n$
\end_inset

 for all 
\begin_inset Formula $n\geq2$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
base: 
\begin_inset Formula $n=2\rightarrow T\left(2\right)=const\leq2c$
\end_inset

 for proper choice of 
\begin_inset Formula $c$
\end_inset

.
 (
\begin_inset Formula $c2\log2=2c$
\end_inset

)
\end_layout

\begin_layout Enumerate
Induction step: we assume 
\begin_inset Formula $T\left(m\right)\leq c\cdot m\log m$
\end_inset

 for all 
\begin_inset Formula $2\leq m<n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T\left(n\right)=T\left(\frac{1}{3}n\right)+T\left(\frac{2}{3}n\right)+n\leq c\cdot\frac{n}{3}\log\frac{n}{3}+c\cdot\frac{2n}{3}\log\frac{2n}{3}+n=c\cdot\frac{n}{3}\log n-c\cdot\frac{n}{3}\log3+c\cdot\frac{2n}{3}\log2+c\cdot\frac{2n}{3}\log n-c\cdot\frac{2n}{3}\log3+n=cn\log n+c\cdot\frac{2n}{3}\log2+n-cn\log3\leq cn\log n$
\end_inset


\begin_inset Newline newline
\end_inset

this is true if and only if 
\begin_inset Formula $c\cdot\frac{2n}{3}\log2+n-cn\log3\leq0\Rightarrow cn\cdot\left(-0.918\right)+n\leq0\Rightarrow n\left(1-0.981\cdot c\right)\leq0\Rightarrow c\geq1.01$
\end_inset


\begin_inset Newline newline
\end_inset

Therefore, 
\begin_inset Formula $T\left(n\right)\in O\left(n\log n\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Lower bound: 
\begin_inset Formula $T\left(n\right)\geq d\cdot n\log n$
\end_inset

 for all 
\begin_inset Formula $n$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
base: 
\begin_inset Formula $n=1\rightarrow T\left(1\right)=1\geq0=c\cdot0=c\cdot1\log1=c\cdot n\log n$
\end_inset

 
\end_layout

\begin_layout Enumerate
Induction step: we assume that 
\begin_inset Formula $T\left(m\right)\geq c\cdot m\log m$
\end_inset

 for all 
\begin_inset Formula $1\leq m<n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T\left(n\right)=T\left(\frac{1}{3}n\right)+T\left(\frac{2}{3}n\right)+n\geq c\cdot\frac{n}{3}\log\frac{n}{3}+c\cdot\frac{2n}{3}\log\frac{2n}{3}+n=c\cdot\frac{n}{3}\log n-c\cdot\frac{n}{3}\log3+c\cdot\frac{2n}{3}\log2+c\cdot\frac{2n}{3}\log n-c\cdot\frac{2n}{3}\log3+n=cn\log n+c\cdot\frac{2n}{3}\log2+n-cn\log3\geq cn\log n$
\end_inset


\begin_inset Newline newline
\end_inset

this is true if and only if 
\begin_inset Formula $c\cdot\frac{2n}{3}\log2+n-cn\log3\geq0\Rightarrow cn\cdot\left(-0.918\right)+n\geq0\Rightarrow n\left(1-0.981\cdot c\right)\geq0\Rightarrow c\leq1$
\end_inset


\begin_inset Newline newline
\end_inset

Therefore, 
\begin_inset Formula $T\left(n\right)\in\Omega\left(n\log n\right)$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=2T\left(n-1\right)+1$
\end_inset

 we will prove using induction that 
\begin_inset Formula $T\left(n\right)=2^{n}-1$
\end_inset


\begin_inset Newline newline
\end_inset

base: 
\begin_inset Formula $n=1\Rightarrow T\left(1\right)=1=2^{1}-1=2^{n}-1$
\end_inset

.
\begin_inset Newline newline
\end_inset

step: we assume the statement is true for some 
\begin_inset Formula $n$
\end_inset

 we will prove for 
\begin_inset Formula $n+1$
\end_inset

.
 using the induction hypothesis we get: 
\begin_inset Formula $T\left(n+1\right)=2T\left(n\right)+1=2\left(2^{n}-1\right)+1=2^{n+1}-1$
\end_inset

 
\begin_inset Newline newline
\end_inset

and indeed we get that the statement is true for 
\begin_inset Formula $n+1$
\end_inset

, hence true for all 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

.
\begin_inset Newline newline
\end_inset

Now we will prove that 
\begin_inset Formula $2^{n}-1\in\Theta\left(2^{n}\right):$
\end_inset

 if we choose 
\begin_inset Formula $c_{1}=\frac{1}{2},c_{2}=1,n_{0}=1$
\end_inset

 we get that for every 
\begin_inset Formula $n>n_{0}$
\end_inset

 
\begin_inset Formula $\frac{1}{2}\left(2^{n}\right)=2^{n-1}\leq2^{n}-1\leq1\cdot2^{n}=2^{n}\Rightarrow$
\end_inset

 we conclude 
\begin_inset Formula $2^{n}-1\in\Theta\left(2^{n}\right)\Rightarrow T\left(n\right)\in\Theta\left(2^{n}\right)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $T\left(n\right)=T\left(\frac{9}{10}n\right)+1$
\end_inset

 this recurrence satisfies master method case 2, we have 
\begin_inset Formula $a=1,b=\frac{10}{9}>1,f\left(n\right)=1$
\end_inset

 and 
\begin_inset Formula $f\left(n\right)=1\in\Theta\left(n^{\log_{\frac{10}{9}}1}\right)=\Theta\left(n^{0}\right)=\Theta\left(1\right)$
\end_inset

 hence using the master method we can conclude 
\begin_inset Formula $T\left(n\right)\in\Theta\left(f\left(n\right)\cdot\log n\right)=\Theta\left(1\cdot\log n\right)=\Theta\left(\log n\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[4.]
\backslash
setcounter{enumi}{4}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
in the first loop 
\begin_inset Formula $i$
\end_inset

 iterates from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $n$
\end_inset

 performing 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

 each iteration adding 
\begin_inset Formula $\sum_{i=1}^{n}1=n$
\end_inset

 cost.
 additionally the inner loop runs from 
\begin_inset Formula $j=i+1$
\end_inset

 to 
\begin_inset Formula $n$
\end_inset

 performing each iteration operations in 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

 adding 
\begin_inset Formula $\sum_{i=1}^{n}\sum_{j=i+1}^{n}1=\sum_{j=2}^{n}\sum_{i=1}^{j-1}1=\sum_{j=2}^{n}\left(j-1\right)=\sum_{j=1}^{n-1}j=\frac{n\left(n-1\right)}{2}$
\end_inset

.
 so in total the cost in the worst case will be 
\begin_inset Formula $n+\frac{n\left(n-1\right)}{2}=\frac{1}{2}n^{2}+\frac{1}{2}n\in\Theta\left(n^{2}\right)$
\end_inset


\end_layout

\begin_layout Enumerate
we can see that when 
\begin_inset Formula $n=0,1$
\end_inset

 we perform only one operation costing 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

 and when 
\begin_inset Formula $n\geq1$
\end_inset

 we perform one operation costing 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

 in addition to the cost of the recursive call 
\begin_inset Formula $T\left(n-1\right)$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

hence 
\begin_inset Formula $T\left(n\right)=T\left(n-1\right)+1$
\end_inset

 and we can see that if we iterate the calls we get 
\begin_inset Formula $T\left(n\right)=1\cdot\left(n-1\right)+1=n\Rightarrow T\left(n\right)\in\Theta\left(n\right).$
\end_inset


\end_layout

\begin_layout Enumerate
similarly we can see that when 
\begin_inset Formula $n=0,1$
\end_inset

 we perform one operation costing 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

.
 and when 
\begin_inset Formula $n=3k,k\in\mathbb{Z}$
\end_inset

 then 
\begin_inset Formula $T\left(n\right)=T\left(\frac{n}{3}\right)+1$
\end_inset

 , when 
\begin_inset Formula $n=3k+1,k\in\mathbb{Z}$
\end_inset

 
\begin_inset Formula $T\left(n\right)=T\left(\frac{n-1}{3}\right)+2$
\end_inset

, and when 
\begin_inset Formula $n=3k+2,k\in\mathbb{Z}$
\end_inset

 
\begin_inset Formula $T\left(n\right)=T\left(\frac{n-2}{3}\right)+3$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
T\left(n\right)\begin{cases}
1 & n=0,1\\
T\left(\frac{1}{3}n\right)+1 & n=3k\\
T\left(\frac{1}{3}\left(n-1\right)\right)+2 & n=3k+1\\
T\left(\frac{1}{3}\left(n-2\right)\right)+3 & n=3k+2
\end{cases}
\]

\end_inset


\begin_inset Newline newline
\end_inset

We can see that when 
\begin_inset Formula $n$
\end_inset

is very big there is very little diffrence between the cases where 
\begin_inset Formula $n=3k,n=3k+1,n=3k+2$
\end_inset

 therefore we estimate that 
\begin_inset Formula $T\left(n\right)=T\left(\frac{1}{3}n\right)+1$
\end_inset

 for simplicity.
\begin_inset Newline newline
\end_inset

Hence using the master method case 2 where 
\begin_inset Formula $a=1,b=3,f\left(n\right)=1$
\end_inset

 and 
\begin_inset Formula $f\left(n\right)=1\in\Theta\left(1\right)=n^{0}=n^{\log_{3}1}$
\end_inset

 we conclude the 
\begin_inset Formula $T\left(n\right)=\Theta\left(f\left(n\right)\log n\right)=\Theta\left(\log n\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
when 
\begin_inset Formula $c$
\end_inset

 is a constant the function is similar to clause (c) where for 
\begin_inset Formula $k\in\mathbb{Z}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
T\left(n\right)\begin{cases}
1 & n=0,1\\
T\left(\frac{1}{c}n\right)+1 & n=c\cdot k\\
T\left(\frac{1}{c}\left(n-1\right)\right)+2 & n=c\cdot k+1\\
T\left(\frac{1}{c}\left(n-2\right)\right)+3 & n=c\cdot k+2\\
\vdots & \vdots\\
T\left(\frac{1}{c}\left(n-c+1\right)\right)+c & n=c\cdot k+c-1
\end{cases}
\]

\end_inset


\begin_inset Newline newline
\end_inset

And when 
\begin_inset Formula $n$
\end_inset

is big enough the constant 
\begin_inset Formula $c$
\end_inset

is negligible and there is little difference between the cases, therefore
 we estimate that 
\begin_inset Formula $T\left(n\right)=T\left(\frac{1}{c}n\right)+1$
\end_inset

 for simplicity, and using the same reasoning as in clause (c),
\begin_inset Newline newline
\end_inset

we get that 
\begin_inset Formula $T\left(n\right)=\Theta\left(\log n\right)$
\end_inset

 
\end_layout

\begin_layout Enumerate
However when 
\begin_inset Formula $c$
\end_inset

 isn't a constant and is equal to 
\begin_inset Formula $n$
\end_inset

 we enter the loop in the third if and the loop iterates 
\begin_inset Formula $i=1$
\end_inset

 to 
\begin_inset Formula $i=n$
\end_inset

 performing 
\begin_inset Formula $\Theta\left(1\right)$
\end_inset

 operation in each iteration hence the cost is 
\begin_inset Formula $\sum_{i=1}^{n}1=n\Rightarrow T\left(n\right)=\Theta\left(n\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create a boolean array B[1...n] of length N and initialize it with false.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
for i=1 to A.length do:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 if 
\begin_inset Formula $\left(A[i]!=-1\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset Formula $B\left[A\left[i\right]\right]=\text{true}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
index
\begin_inset Formula $\leftarrow1.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
for i=1 to B.length do:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 if 
\begin_inset Formula $\left(B\left[i\right]==\text{false}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 while 
\begin_inset Formula $\left(A\left[\text{index}\right]!=-1\right)\text{ do: }$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 index
\begin_inset Formula $\leftarrow$
\end_inset

 index
\begin_inset Formula $+1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
quad
\end_layout

\end_inset

 
\begin_inset Formula $A\left[\text{index}\right]=i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta\left(n\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Line (1) takes 
\begin_inset Formula $\Theta\left(n\right).$
\end_inset

 The for loop in line (2) also takes 
\begin_inset Formula $\Theta\left(n\right).$
\end_inset

 The for loop and the while loop in line (6) take 
\begin_inset Formula $\Theta\left(n\right)$
\end_inset

 each, and combined they take 
\begin_inset Formula $2\Theta\left(n\right)\text{ which equals to }\Theta\left(n\right).$
\end_inset

 Everything together is 
\begin_inset Formula $\Theta\left(n\right).$
\end_inset


\end_layout

\end_deeper
\end_deeper
\end_body
\end_document
